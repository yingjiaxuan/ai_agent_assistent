#!/usr/bin/env python3
"""
ÁÆÄÂçïÁöÑÊï∞ÊçÆÂ∫ìÊü•ÁúãÂ∑•ÂÖ∑
"""
import sqlite3
import os
from config import DATABASE_PATH

def view_database():
    """Êü•ÁúãÊï∞ÊçÆÂ∫ìÁªìÊûÑÂíåÂÜÖÂÆπ"""
    if not os.path.exists(DATABASE_PATH):
        print(f"Êï∞ÊçÆÂ∫ìÊñá‰ª∂‰∏çÂ≠òÂú®Ôºö{DATABASE_PATH}")
        return
    
    conn = sqlite3.connect(DATABASE_PATH)
    cursor = conn.cursor()
    
    print("=" * 50)
    print("üìä Êï∞ÊçÆÂ∫ìÊ¶ÇËßà")
    print("=" * 50)
    
    # Êü•ÁúãÊâÄÊúâË°®
    cursor.execute("SELECT name FROM sqlite_master WHERE type='table';")
    tables = cursor.fetchall()
    print(f"üìã Êï∞ÊçÆÂ∫ìË°®Ôºö{len(tables)} ‰∏™")
    for table in tables:
        print(f"  - {table[0]}")
    
    print("\n" + "=" * 50)
    print("üìù ÂêÑË°®Êï∞ÊçÆÁªüËÆ°")
    print("=" * 50)
    
    for table in tables:
        table_name = table[0]
        cursor.execute(f"SELECT COUNT(*) FROM {table_name}")
        count = cursor.fetchone()[0]
        print(f"üìä {table_name}: {count} Êù°ËÆ∞ÂΩï")
        
        # ÊòæÁ§∫Ââç3Êù°ËÆ∞ÂΩï‰Ωú‰∏∫Á§∫‰æã
        if count > 0:
            cursor.execute(f"SELECT * FROM {table_name} LIMIT 3")
            rows = cursor.fetchall()
            cursor.execute(f"PRAGMA table_info({table_name})")
            columns = [col[1] for col in cursor.fetchall()]
            print(f"   ÂàóÂêç: {', '.join(columns)}")
            for i, row in enumerate(rows, 1):
                print(f"   Á§∫‰æã {i}: {row}")
        print()
    
    conn.close()

if __name__ == "__main__":
    view_database()
